// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rebus.Infrastructure.Persistance;

#nullable disable

namespace Rebus.Infrastructure.Migrations
{
    [DbContext(typeof(RebusDbContext))]
    [Migration("20240331130122_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rebus.Domain.Entities.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.GameAccessCode", b =>
                {
                    b.Property<int>("GameAccessCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameAccessCodeId"));

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("TimeUsed")
                        .HasColumnType("int");

                    b.Property<int?>("UsageLimit")
                        .HasColumnType("int");

                    b.HasKey("GameAccessCodeId");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("GameAccessCodes");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.GameCreator", b =>
                {
                    b.Property<int>("GameCreatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameCreatorId"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GameCreatorId");

                    b.HasIndex("GameId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("GameCreator");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.GameUserAccess", b =>
                {
                    b.Property<int>("GameUserAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameUserAccessId"));

                    b.Property<DateTime>("AccessTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameAccessCodeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GameUserAccessId");

                    b.HasIndex("GameAccessCodeId");

                    b.HasIndex("UserId");

                    b.ToTable("GameUserAccesses");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.UserGameHistory", b =>
                {
                    b.Property<int>("UserGameHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserGameHistoryId"));

                    b.Property<DateTime>("AccessEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AccessStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserGameHistoryId");

                    b.HasIndex("GameId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGameHistories");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.GameAccessCode", b =>
                {
                    b.HasOne("Rebus.Domain.Entities.Game", "Game")
                        .WithOne("GameAccessCode")
                        .HasForeignKey("Rebus.Domain.Entities.GameAccessCode", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.GameCreator", b =>
                {
                    b.HasOne("Rebus.Domain.Entities.Game", "Game")
                        .WithMany("GameCreators")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rebus.Domain.Entities.Role", "Role")
                        .WithMany("GameCreators")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rebus.Domain.Entities.User", "User")
                        .WithMany("GameCreators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.GameUserAccess", b =>
                {
                    b.HasOne("Rebus.Domain.Entities.GameAccessCode", "GameAccessCode")
                        .WithMany("GameUserAccesses")
                        .HasForeignKey("GameAccessCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rebus.Domain.Entities.User", "User")
                        .WithMany("GameUserAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameAccessCode");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.User", b =>
                {
                    b.OwnsOne("Rebus.Domain.Entities.Location", "Location", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("city")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("latitude")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("locationId")
                                .HasColumnType("int");

                            b1.Property<string>("longitude")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("postalCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.UserGameHistory", b =>
                {
                    b.HasOne("Rebus.Domain.Entities.Game", "Game")
                        .WithMany("UserGameHistories")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rebus.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rebus.Domain.Entities.User", "User")
                        .WithMany("UserGameHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.Game", b =>
                {
                    b.Navigation("GameAccessCode");

                    b.Navigation("GameCreators");

                    b.Navigation("UserGameHistories");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.GameAccessCode", b =>
                {
                    b.Navigation("GameUserAccesses");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.Role", b =>
                {
                    b.Navigation("GameCreators");
                });

            modelBuilder.Entity("Rebus.Domain.Entities.User", b =>
                {
                    b.Navigation("GameCreators");

                    b.Navigation("GameUserAccesses");

                    b.Navigation("UserGameHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
